{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"3af472fb-c35b-52ee-b328-d394a4d56372","excerpt":"개요 JDK 에 대해서 잘 모른다면 선택지조차 모른채 관습적으로 사용하던 JDK만을 사용하는 경우가 있습니다. 해당 포스트에서는 주관적인 관점에서 JDK 를 선택하는 기준과 버전별 추천하는 JDK 에 대해서 다뤄보고자 합니다.OpenJDK의 정의, 상용JDK 보다 나은 점, 버전 별 차이와 같은 요소들을 차치하고 간결하게 구성되어있습니다. JDK 선택하기 프로젝트 환경에 따라 버전 선택 본인이 개발하려는 프로젝트의 프레임워크, 라이브러리, 규칙 등에 따라 사용 버전을 선택합니다. 버전은 최소 1.8(8) 이상을 권장합니다. 여러 이슈가 해결된 라이브러리와 프레임워크는 8 버전 이상을 지원하는 경우가 대부분입니다. 또한 특별한 이유가 없다면 그 이상의 버전을 선택합니다. TCK 여부로 배급처를 선택 OpenJDK 는 Oracle 에서 제공하는 OpenJDK 말고도 다양한 배급처가 존재합니다. 여러 배급처에서 제공하는 OpenJDK 중 TCK(Technology Compatibilty…","fields":{"slug":"/Java/Choice_OpenJDK/"},"frontmatter":{"categories":"java","title":"[java] OpenJDK 선택하기","date":"September 20, 2022"}},"next":{"fields":{"slug":"/Java/start_gradle_project/JUnit5/"}},"previous":null},{"node":{"id":"f80849e8-629c-5116-9f1e-52f619007ccb","excerpt":"개요 Gradle Project 에 Junit5 + AssertThat 을 설정해보도록 하겠습니다. 맥락을 이해한다면 Spring 프레임워크를 사용하거나 Maven Project 에도 적용할 수 있으니 참고 바랍니다. 종류 환경 OS M1 Mac(Monterey 12.4) IDE Intellij(2022.1.2) Java jdk17 (temurin) Gradle Project 에 JUnit5 라이브러리 추가 Gradle Junit5 Use Guide\n를 확인하여 손쉽게 JUnit5 를 적용할 수 있습니다. 직접적인 관련은 없지만 assertThat 을 사용하기 위해서 assertj 종속성도 같이 추가했습니다. Gradle Project build.gradle 수정 Gradle Spring 환경에서 junit5 라이브러리 추가 Gradle 과 동일하게 설정해도 무관하지만 Spring boot 에는 spring-boot-starter-test 가 존재하기 때문에 종속성을 다르게 가져갈…","fields":{"slug":"/Java/start_gradle_project/JUnit5/"},"frontmatter":{"categories":"Spring Java","title":"[Gradle] Gradle Project 에 JUnit5 + AssertThat 설정","date":"June 21, 2022"}},"next":{"fields":{"slug":"/Java/start_gradle_project/lombok/"}},"previous":{"fields":{"slug":"/Java/Choice_OpenJDK/"}}},{"node":{"id":"cd245c56-b4f5-5b1e-a951-8ddba072ab7a","excerpt":"개요 Gradle Proejct 에 Lombok 을 추가하는 가장 정석적이고 깔끔한 방법을 소개하고자 합니다. 추가적으로 Intellij IDE 에서 해야되는 간단한 설정도 확인할 수 있습니다. 종류 환경 OS M1 Mac(Monterey 12.4) IDE Intellij(2022.1.2) Java jdk17 (temurin) Gradle Project 에 Lombok 적용하기 주로 라이브러리에 추가하는 통상적인 방법과 달리 Gralde Project는 라이브러리를 추가하지 않아도 plugin 으로 간단히 Lombok을 적용할 수 있습니다.\nlombok plugins guide 에 접속하여 버전과 적용 방법을 확인할 수 있습니다. bulid.gradle 에 lombok plugin 추가 Dependences 에 의존성과 annotation 설정을 해야하는 일반 gradle 환경과 달리 간단하게 적용할 수 있는 것이 가장 큰 장점입니다. IntelliJ 에 Lombok 설정하기 플러…","fields":{"slug":"/Java/start_gradle_project/lombok/"},"frontmatter":{"categories":"Java Spring","title":"[Java] Gradle Project lombok 설정","date":"June 20, 2022"}},"next":{"fields":{"slug":"/Java/Path/"}},"previous":{"fields":{"slug":"/Java/start_gradle_project/JUnit5/"}}},{"node":{"id":"cace616e-3fe9-5e36-aedc-9d2b5c719c27","excerpt":"개요 java 에서 절대 경로의 파일을 가져오려고 하는 경우, 각 OS별로 파일 구분자를 다르게 지정해야합니다. 기존에 OS 별 구분자를 지정하지 않았거나 하드 코딩 하였다면 Paths 라이브러리를 사용하여 개선해보도록 하겠습니다. 경로 구분자를 삽입하는 방법 하드 코딩으로 절대경로 지정하기 가장 간결한 방법이지만 운영체제마다 구분자가 조금씩 다르게 때문에 여러 환경을 고려한다면 권장하지 않습니다. File.separator 로 파일 구분자 삽입하기 직접 실행한다면 각 운영체제에 맞춰 파일 구분자가 다르게 삽입되는 것을 확인할 수 있습니다. 다만  하드코딩보다 훨씬 코드가 길고 가독성이 떨어져서 해당 방법으로 구분자를 삽입하고 있다면 다음 방법으로 수정하는 것이 좋습니다. Path.get() 으로 파일 구분자 삽입하기 File.separator 랑 결과는 같지만 코드가 더 짧고 가독성이 좋습니다.\n성능상 차이가 크지 않다면 여러모로 Path.get() 을 사용하는 것이 좋아보입니다…","fields":{"slug":"/Java/Path/"},"frontmatter":{"categories":"Java","title":"[Java] 파일 구분자 File.separator 대신 Path 사용하기","date":"January 30, 2022"}},"next":{"fields":{"slug":"/Java/start_gradle_project/project_init/"}},"previous":{"fields":{"slug":"/Java/start_gradle_project/lombok/"}}},{"node":{"id":"e74bbc90-89b5-5147-a10d-844f92c9e9bb","excerpt":"개요 Mac 환경에서 Gradle Proejct 를 생성하는 방법에 대해서 알아보겠습니다. 종류 환경 OS M1 Mac(Monterey 12.4) IDE Intellij(2022.1.2) Java jdk17 (temurin) Gralde 프로젝트 시작하기 Gradle Install Hombrew Gradle Installation Documents Gradle 공식 문서에 따라 설치하도록 합니다. Hombrew 로 설치하는 것 역시 권장 방법이므로 터미널에 다음과 같이 입력 후 실행합니다. 1. 프로젝트 시작 폴더 생성 Gradle 프로젝트를 생성하기 전에 해당 프로젝트를 시작할 폴더를 새로 만듭니다. 폴더 명과 별개로 프로젝트 이름은 따로 지정할 수도 있습니다. 방법은 아래 말씀드리겠습니다. 2. Gradle 프로젝트 생성 폴더로 이동한 후에 아래 명령어를 입력합니다. 입력 후에는 몇 가지 옵션을 선택하여 프로젝트를 새로 생성합니다. stat_gradle_new_project 생…","fields":{"slug":"/Java/start_gradle_project/project_init/"},"frontmatter":{"categories":"Java","title":"[Gradle] Gradle project 시작하기","date":"January 28, 2022"}},"next":{"fields":{"slug":"/Spring/4-thymeleaf_layout/"}},"previous":{"fields":{"slug":"/Java/Path/"}}},{"node":{"id":"7940422c-d221-563f-a43a-3ed19affd1b1","excerpt":"개요 이번에는 thymeleaf 를 프로젝트에 적용하는 방법과 thymeleaf layout 을 설정하는 방법에 대해서 알아보겠습니다. 종류 환경 OS M1 Mac(Monterey 12.4) IDE Intellij(2022.1.2) Java jdk17 (temurin) Thymeleaf 환경 설정 thymeleaf 의존성 추가 build.gradle 파일에 thymleaf 의존성을 추가합니다. thymeleaf 설정 application.yml 파일에 thymelaf 관련 항목을 설정합니다. 각 항목 해설 옵션 해설 prefix: classpath:templates/ thymeleaf 최상위 디렉토리를 지정합니다. Controller 에서 /resource/templates/index.html 을 return 하고 싶은 경우 return index 라고 작성하면 됩니다. suffix: .html .html 으로 설정하여 파일 확장자를 생략할 수 있습니다. cache: true 캐시…","fields":{"slug":"/Spring/4-thymeleaf_layout/"},"frontmatter":{"categories":"Spring","title":"[springboot_start] thymeleaf layout 설정(작성 중)","date":"January 09, 2022"}},"next":{"fields":{"slug":"/Spring/springboot_start-1-init_project/"}},"previous":{"fields":{"slug":"/Java/start_gradle_project/project_init/"}}},{"node":{"id":"6aad5bda-3421-5be8-87b7-7de54d847e55","excerpt":"개요 신규 Spring Project 를 spring initializr 사이트를 이용하여 생성하고 Intellij IDE 에 import 하는 방법에 대해서 알아보겠습니다. 종류 환경 OS M1 Mac(Monterey 12.4) IDE Intellij(2022.1.2) Java jdk17 (temurin) 프로젝트 생성 spring initializr을 이용한 프로젝트 생성 새로운 springboot project를 시작하는 방법은 여러가지가 있지만 이번에는 spring inializr에 접속하여 간단하게 생성해보도록 하겠습니다. Spring initializr 사이트에 접속합니다. Project 환경 선택 종류 환경 project Gradle Prject language java spring boot 2.6.2 packaging jar java 17 Project Metadata는 각 프로젝트 성격에 맞춰서 작성하면 됩니다. Dependencies는 우측 Add Dependen…","fields":{"slug":"/Spring/springboot_start-1-init_project/"},"frontmatter":{"categories":"Spring","title":"[springboot] Spring Boot project 시작하기 1/?","date":"January 09, 2022"}},"next":{"fields":{"slug":"/Spring/springboot_start-2-log4j2/"}},"previous":{"fields":{"slug":"/Spring/4-thymeleaf_layout/"}}},{"node":{"id":"59b8f325-5c4d-5052-8478-48216dd47a2d","excerpt":"이번 시간에는 springboot 에서 log4j2를 설정해보겠습니다. 라이브러리 가져오기 기존 logging 라이브러리 제외하기 스프링에서 제공하는 기본 라이브러리는 사용하지 않을 예정이므로 제외시킵니다.  log4j2 라이브러리 가져오기 다음으로는 log4j2와 slf4j를 위한 라이브러리를 가져오겠습니다. slf4j는 slf4j-impl에 포함되어있으므로 따로 가져오진 않겠습니다. 버전은 작성일 기준 2.17.1 이상을 가져오시길 바랍니다. log4j 취약점 논란이 있었기 때문에 maven repository에서 가져오실 땐 꼭 취약점이 발견되지 않은 버전을 가져오시길 바랍니다.  를 통해 가져오지 않는 이유는 maven repository 사이트의 표기와 달리 2.17.0 버전을 가져오기 때문입니다. yml 설정을 위한 jackson-dataformat-yaml 라이브러리 가져오기 log4j2 설정을 .xml 로 관리해왔지만 이번 프로젝트는 .yml 로 관리해보도록 하겠습니…","fields":{"slug":"/Spring/springboot_start-2-log4j2/"},"frontmatter":{"categories":"Spring","title":"[springboot] Spring Boot project 시작하기, log4j2 + yml","date":"January 09, 2022"}},"next":{"fields":{"slug":"/Spring/springboot_start-3-undertow/"}},"previous":{"fields":{"slug":"/Spring/springboot_start-1-init_project/"}}},{"node":{"id":"e93e9f50-9432-5506-a6db-bdb4a316aeae","excerpt":"개요 새롭게 생성한 Spring Boot Project 에 WAS를 Tomcat에서 undertow로 변경해보겠습니다. tomcat은 오래전부터 사용된 WAS이나 아쉬운 점이 많아 사용 빈도가 줄고 있다고 합니다. 그래서 undertow로 바꿔보도록 하겠습니다. 의존성 추가 bulid.gradle 파일을 수정하여 Tomcat 을 제외 tomcat은 사용하지 않을 예정이므로 제외합니다. 제외하지 않을 경우 에러가 발생할 수 있으니 꼭 제외할 수 있도록 합니다. undertow 의존성 추가 버전은 본인의 상황에 맞게 maven repository 에서 가져오시면 됩니다.\nundertow 라이브러리와 autobulid 를 위한 devtools 를 추가합니다. application.yml 설정 undertow + autobulid(devtools) 설정 설정에 대한 프로파일 명을 common 로 지정합니다. 해당 프로파일을 불러올 경우의 설정을 정의할 수 있습니다. spring.devto…","fields":{"slug":"/Spring/springboot_start-3-undertow/"},"frontmatter":{"categories":"Spring","title":"[springboot_start] 내장 WAS를 undertow로 변경하기","date":"January 09, 2022"}},"next":{"fields":{"slug":"/Mybatis/error-NumberformatException/"}},"previous":{"fields":{"slug":"/Spring/springboot_start-2-log4j2/"}}},{"node":{"id":"590b4795-d729-5782-8a96-78a418b4411c","excerpt":"개요 Mybatis 에러 중 java.lang.NumberFormatException 와 같은 에러가 발생하는 2가지 경우와 해결 방법에 대해서 알아보겠습니다. 에러 예시 화면 원인 진단 및 해결 데이터 타입 에러 에러를 보면 데이터 타입의 형변환에 실패해서 생긴 문제로 보이는데, java 변수와 쿼리 결과의 데이터 값이 다른건지 확인해보도록 합니다. 동적 쿼리 에러 아무리 봐도 데이터 타입의 문제가 없다면 SQL 동적 쿼리에서 \"\" 와 ” 를 구분하여 사용하였는지 확인해야합니다. 다음과 같이 작성했을 경우 아래와 같이 변경할 수 있도록 합니다. 해결 방법은 몇 가지 존재하지만 가장 깔끔한 방법은 위와 같이 작은따옴표(”)를 먼저 사용한 뒤 큰따옴표(\"\")를 사용해야 합니다. 해당 오류가 발생하는 이유를 간략히 설명하자면 OGNL(Object Graph Navigation Language)의 문제 때문입니다.\nOGNL인터프리터에서는 ”나 ’?’를 char형으로 인식하고 ’??’나 …","fields":{"slug":"/Mybatis/error-NumberformatException/"},"frontmatter":{"categories":"Spring Mybatis","title":"[Mybatis] java.lang.NumberformatException Error 해결","date":"January 08, 2022"}},"next":{"fields":{"slug":"/Git/sourcetree-mac_keychain_error/"}},"previous":{"fields":{"slug":"/Spring/springboot_start-3-undertow/"}}},{"node":{"id":"1186602e-904b-5c14-8c00-67c0dbe608a1","excerpt":"개요 Sourcetree 를 사용하다가 키체인 암호를 입력하라는 팝업이 떠서 당황한 경험이 있다면 다음과 같은 방법으로 해결할 수 있습니다. 해결 방법 터미널 실행 해당 명령어 입력 git 명령어 재시도 password 입력 창이 뜨면 github Personal access tokens 입력","fields":{"slug":"/Git/sourcetree-mac_keychain_error/"},"frontmatter":{"categories":"Sourcetree","title":"[Sourcetree] Mac KeyChain Error","date":"January 07, 2022"}},"next":{"fields":{"slug":"/Java/string_reverse/"}},"previous":{"fields":{"slug":"/Mybatis/error-NumberformatException/"}}},{"node":{"id":"fabe77db-03f6-5434-975c-9f8dfb2a8647","excerpt":"문자열을 거꾸로 뒤집는 방법은 여러 가지가 있지만 StringBuffer, reverse() 를 사용하는게 제일 간결하지 않을까싶습니다. StringBuffer, reverse() 예제 Code Result 설명 StringBuffer StringBuffer 클래스의 인스턴스는 String 클래스의 인스턴스와 다르게 그 값을 변경하거나 추가할 수 있는 가변 클래스입니다. new StringBuffer()로 새롭게 선언할 수 있습니다. StringBuffer.reverse() reverse() 메소드를 사용하면 해당 객체를 뒤집을 수 있습니다. reverse()를 사용하면 예제와 같이 sb와 reverseString의 문자열이 뒤집혀 있는 것을 확인할 수 있습니다. StringBuffer는 String를 사용하는 것보다 변경이 쉽다는 점에서 메모리 공간과 속도 측면에서 이득입니다. 다만 만능은 아니므로 적절한 상황에서 필요에 따라 사용하는 것이 좋아보입니다. StringBuffer,…","fields":{"slug":"/Java/string_reverse/"},"frontmatter":{"categories":"Java","title":"[Java] String 문자열 뒤집기","date":"January 01, 2022"}},"next":null,"previous":{"fields":{"slug":"/Git/sourcetree-mac_keychain_error/"}}}],"categories":["All","java","Spring","Java","Mybatis","Sourcetree"]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}